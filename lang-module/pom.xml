<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.vertx</groupId>
  <artifactId>lang-clojure</artifactId>
  <name>Clojure Vert.x lang module</name>
  <parent>
    <groupId>io.vertx</groupId>
    <artifactId>lang-clojure-parent</artifactId>
    <version>1.0.5</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <properties>
    <!-- vert.x module name -->
    <module.name>${project.groupId}~${project.artifactId}~${project.version}</module.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-platform</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>clojure-api</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.projectodd.shimdandy</groupId>
      <artifactId>shimdandy-api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.projectodd.shimdandy</groupId>
      <artifactId>shimdandy-impl</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>clojure</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>data.json</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.clojure</groupId>
      <artifactId>tools.nrepl</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>clj-stacktrace</groupId>
      <artifactId>clj-stacktrace</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>clojure-complete</groupId>
      <artifactId>clojure-complete</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>testtools</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
      </testResource>
    </testResources>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.plugin.version}</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-classes</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${basedir}/target/mods/${module.name}</outputDirectory>
              <resources>
                <resource>
                  <directory>target/classes</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven.dependency.plugin.version}</version>
        <executions>
          <execution>
            <id>copy-mod-dependencies-to-target</id>
            <phase>process-classes</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>target/mods/${module.name}/lib</outputDirectory>
              <includeScope>runtime</includeScope>
              <excludeGroupIds>io.vertx,org.clojure,clj-stacktrace,clojure-complete</excludeGroupIds>
              <excludeArtifactIds>shimdandy-impl</excludeArtifactIds>
            </configuration>
          </execution>
          <execution>
            <id>copy-runtime-dependencies-to-target</id>
            <phase>process-classes</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>target/mods/${module.name}/___runtime___</outputDirectory>
              <includeScope>runtime</includeScope>
              <excludeArtifactIds>shimdandy-api</excludeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin.version}</version>
        <configuration>
          <argLine>-XX:MaxPermSize=256m</argLine>
          <systemProperties>
            <property>
              <name>vertx.mods</name>
              <value>target/mods</value>
            </property>
            <property>
              <name>vertx.test.timeout</name>
              <value>${test.timeout}</value>
            </property>            
          </systemProperties>
          <environmentVariables>
            <cheese>Gouda</cheese>
          </environmentVariables>
          <includes>
            <include>**/integration/**</include>
          </includes>
          <classpathDependencyExcludes>
            <classpathDependencyExclude>org.clojure:clojure</classpathDependencyExclude>
            <classpathDependencyExclude>org.projectodd.shimdandy:shimdandy-impl</classpathDependencyExclude>
          </classpathDependencyExcludes>
          <additionalClasspathElements>
            <additionalClasspathElement>${basedir}/target/mods/io.vertx~lang-clojure~${project.version}/</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven.assembly.plugin.version}</version>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/mod.xml</descriptor>
          </descriptors>
          <attach>true</attach>
        </configuration>
        <executions>
          <execution>
            <id>assemble</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven.clean.plugin.version}</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/build/mods</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/target/mods</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/target/docs</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
